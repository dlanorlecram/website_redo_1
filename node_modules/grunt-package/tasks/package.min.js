!function(a,b){"use strict";var c=require("path"),d=require("fs"),e=function(a,e){e||a.fatal("No package target specified");var f;try{f=JSON.parse(d.readFileSync(c.join(e.srcDir||"./","package.json"),{encoding:"utf8"}))}catch(g){b.error(g),a.fatal("Could not read "+c.join(e.srcDir||"./","package.json."))}try{var h=f;e.remove&&e.remove.forEach(function(b){delete h[b],a.log.ok("Removed "+b)}),e.move&&e.move.forEach(function(b){h[b[1]]=h[b[0]],delete h[b[0]],a.log.ok("Moved "+b[0]+" -> "+b[1])}),e.add&&Object.keys(e.add).forEach(function(b){h[b]=e.add[b],a.log.ok("Added "+b+" "+JSON.stringify(h[b]))});var i=JSON.stringify(h,void 0,e.pretty);d.writeFileSync(c.join(e.destDir||"./build/","package.json"),i,{encoding:"utf8"})}catch(g){b.error(g),a.fatal("Could not write "+c.join(e.destDir||"./build/","package.json."))}};a.exports=function(a){a.registerMultiTask("package","Rewrite package.json file.",function(){e(a,this.data)})}}(module,console);